{"version":3,"sources":["src/dynamic-directive.js"],"names":[],"mappings":"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","file":"src/dynamic-directive.js","sourcesContent":["'use strict';\n\n(function(angular) {\n\n  var uniqueId = 0;\n\n  class DynamicDirectiveInjection {\n\n    constructor(injectionFunction, name, attributes) {\n      if ( !name ) {\n        throw new Error('DynamicInjection: name argument should be a string');\n      }\n      this.name = name;\n      if ( !injectionFunction || !angular.isFunction(injectionFunction) ) {\n        throw new Error('DynamicInjection: injectionFunction argument should be a function');\n      }\n      this.injectionFunction = injectionFunction;\n\n      this.attributes = this.attributes || []; // [{name: 'class', value: 'cool fun'}, ...]\n\n      this._id = ++uniqueId;\n    }\n\n  }\n\n  angular.module('dynamicDirectives', [])\n  .provider('dynamicDirectiveService', (function() {\n    let injections = {};\n\n    function _ensureInjectionsArray(anchorName) {\n      injections[anchorName] = injections[anchorName] || [];\n    }\n\n    function getInjections(anchorName, scope) {\n      _ensureInjectionsArray(anchorName);\n      let ia = injections[anchorName];\n      return ia.filter( (da) => da.injectionFunction(scope) );\n    }\n\n    function addInjection(anchorName, da) {\n      _ensureInjectionsArray(anchorName);\n      injections[anchorName].push(da);\n    }\n\n    return {\n      addInjection: addInjection,\n      DynamicDirective: DynamicDirectiveInjection,\n      $get: ['$rootScope', function($rootScope) {\n        return {\n          DynamicDirective: DynamicDirectiveInjection,\n          getInjections: getInjections,\n          addInjection: function(anchorName, da) {\n            addInjection(anchorName, da);\n            $rootScope.$broadcast('dynamicDirectiveInjectionUpdated', anchorName, da);\n          }\n        };\n      }]\n    };\n  })())\n  .directive('dynamicDirective', ['$compile', 'dynamicDirectiveService', function($compile, dynamicDirectiveService) {\n\n    const DYNAMIC_DIRECTIVE_ID = 'dynamic-directive-id';\n\n    function link(scope, element, attrs) {\n      function appendDirective(dynamicDirective) {\n        let template = angular.element(buildHtmlFromInjectionData(dynamicDirective));\n        let newElt = $compile(template)(scope);\n        element.append(newElt);\n      }\n\n      let buildHtmlFromInjectionData = function(dynamicDirective) {\n        let attributes = {};\n        attributes[DYNAMIC_DIRECTIVE_ID] = dynamicDirective._id;\n\n        dynamicDirective.attributes.forEach( (attribute) => attributes[attribute.name] = attribute.value );\n\n        let e = angular.element('<' + dynamicDirective.name + '/>');\n        e.attr(attributes);\n        return e;\n      };\n\n      function fixVisibility() {\n        if (element.children().length) {\n          element.show();\n        } else {\n          element.hide();\n        }\n      }\n\n      let anchorName = attrs.dynamicDirective;\n      element.hide();\n\n      let dynamicDirectives = dynamicDirectiveService.getInjections(anchorName, scope);\n\n      dynamicDirectives.forEach(appendDirective);\n      fixVisibility();\n\n      scope.$on('dynamicDirectiveInjectionUpdated', function(name) {\n        if ( name !== anchorName ) {\n          return ;\n        }\n        let dynamicDirectives = dynamicDirectiveService.getInjections(anchorName, scope);\n        let dIds = {}, currentIds = {};\n        dynamicDirectives.forEach( (d) => dIds[d._id] = d );\n\n        element.children().each((index, elt) => {\n          let $e = angular.element(elt), directiveId = $e.attr(DYNAMIC_DIRECTIVE_ID);\n          if ( !dIds[directiveId] ) {\n            $e.remove();\n            return ;\n          }\n          currentIds[directiveId] = true;\n        });\n\n        Object.keys(dIds).forEach( (id) => {\n          if ( !currentIds[id] ) {\n            appendDirective(dIds[id]);\n          }\n        });\n        fixVisibility();\n      });\n    }\n\n    return {\n      restrict: 'A',\n      link: link\n    };\n  }])\n  ;\n})(angular);\n"]}